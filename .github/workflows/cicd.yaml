name: CI/CD Pipeline

on:
  push:
    branches:
      - deploy-to-ec2

jobs:
  build:
    name: Checkout and Deploy Source Code
    runs-on: self-hosted
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
      - name: Deploy Source Code to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOYMENT_EC2_KEY }}
          REMOTE_HOST: ${{ secrets.DEPLOY_EC2_HOST }}
          REMOTE_USER: ${{ secrets.DEPLOYMENT_EC2_USER }}
          TARGET: /home/ubuntu/reactjs-app

  configure-docker:
    name: Configure Docker on Server
    needs: build
    runs-on: self-hosted
    steps:
      - name: Configure Docker and Permissions
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_EC2_HOST_DNS }}
          username: ${{ secrets.DEPLOYMENT_EC2_USER }}
          key: ${{ secrets.DEPLOYMENT_EC2_KEY }}
          script: |
            sudo bash -c 'cat <<EOF > /etc/docker/daemon.json
            {
              "exec-opts": ["native.cgroupdriver=systemd"]
            }
            EOF'
            sudo usermod -aG docker $USER
            sudo systemctl restart docker

  deploy-app:
    name: Deploy Application
    needs: configure-docker
    runs-on: self-hosted
    steps:
      - name: Deploy and Run Application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_EC2_HOST_DNS }}
          username: ${{ secrets.DEPLOYMENT_EC2_USER }}
          key: ${{ secrets.DEPLOYMENT_EC2_KEY }}
          script: |
            cd /home/ubuntu/reactjs-app
            docker stop react-app || true
            docker rm react-app || true
            docker build -t react-app .
            docker run -d -p 3000:80 --name react-app react-app
